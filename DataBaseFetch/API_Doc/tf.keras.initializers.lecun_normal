Help on class LecunNormal in module keras.initializers.initializers_v2:
class LecunNormal(VarianceScaling)
|  LecunNormal(seed=None)
|
|  Lecun normal initializer.
|
|   Also available via the shortcut function
|  `tf.keras.initializers.lecun_normal`.
|
|  Initializers allow you to pre-specify an initialization strategy, encoded in
|  the Initializer object, without knowing the shape and dtype of the variable
|  being initialized.
|
|  Draws samples from a truncated normal distribution centered on 0 with
|  `stddev = sqrt(1 / fan_in)` where `fan_in` is the number of input units in
|  the weight tensor.
|
|  Examples:
|
|  >>> # Standalone usage:
|  >>> initializer = tf.keras.initializers.LecunNormal()
|  >>> values = initializer(shape=(2, 2))
|
|  >>> # Usage in a Keras layer:
|  >>> initializer = tf.keras.initializers.LecunNormal()
|  >>> layer = tf.keras.layers.Dense(3, kernel_initializer=initializer)
|
|  Args:
|    seed: A Python integer. Used to make the behavior of the initializer
|      deterministic. Note that a seeded initializer will not produce the same
|      random values across multiple calls, but multiple initializers will
|      produce the same sequence when constructed with the same seed value.
|
|  References:
|    - [Klambauer et al., 2017](https://arxiv.org/abs/1706.02515)
|
|  Method resolution order:
|      LecunNormal
|      VarianceScaling
|      Initializer
|      builtins.object
|
|  Methods defined here:
|
|  __init__(self, seed=None)
|      Initialize self.  See help(type(self)) for accurate signature.
|
|  get_config(self)
|      Returns the configuration of the initializer as a JSON-serializable dict.
|
|      Returns:
|        A JSON-serializable Python dict.
|
|  ----------------------------------------------------------------------
|  Methods inherited from VarianceScaling:
|
|  __call__(self, shape, dtype=None, **kwargs)
|      Returns a tensor object initialized as specified by the initializer.
|
|      Args:
|        shape: Shape of the tensor.
|        dtype: Optional dtype of the tensor. Only floating point types are
|          supported. If not specified, `tf.keras.backend.floatx()` is used,
|          which default to `float32` unless you configured it otherwise (via
|          `tf.keras.backend.set_floatx(float_dtype)`)
|        **kwargs: Additional keyword arguments.
|
|  ----------------------------------------------------------------------
|  Class methods inherited from Initializer:
|
|  from_config(config) from builtins.type
|      Instantiates an initializer from a configuration dictionary.
|
|      Example:
|
|      ```python
|      initializer = RandomUniform(-1, 1)
|      config = initializer.get_config()
|      initializer = RandomUniform.from_config(config)
|      ```
|
|      Args:
|        config: A Python dictionary, the output of `get_config`.
|
|      Returns:
|        A `tf.keras.initializers.Initializer` instance.
|
|  ----------------------------------------------------------------------
|  Data descriptors inherited from Initializer:
|
|  __dict__
|      dictionary for instance variables (if defined)
|
|  __weakref__
|      list of weak references to the object (if defined)
