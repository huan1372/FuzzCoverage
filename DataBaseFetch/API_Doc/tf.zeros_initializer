Help on class Zeros in module tensorflow.python.ops.init_ops_v2:
class Zeros(Initializer)
|  Initializer that generates tensors initialized to 0.
|
|  Initializers allow you to pre-specify an initialization strategy, encoded in
|  the Initializer object, without knowing the shape and dtype of the variable
|  being initialized.
|
|  Examples:
|
|  >>> def make_variables(k, initializer):
|  ...   return (tf.Variable(initializer(shape=[k], dtype=tf.float32)),
|  ...           tf.Variable(initializer(shape=[k, k], dtype=tf.float32)))
|  >>> v1, v2 = make_variables(3, tf.zeros_initializer())
|  >>> v1
|  <tf.Variable ... shape=(3,) ... numpy=array([0., 0., 0.], dtype=float32)>
|  >>> v2
|  <tf.Variable ... shape=(3, 3) ... numpy=
|  array([[0., 0., 0.],
|         [0., 0., 0.],
|         [0., 0., 0.]], dtype=float32)>
|  >>> make_variables(4, tf.random_uniform_initializer(minval=-1., maxval=1.))
|  (<tf.Variable...shape=(4,) dtype=float32...>, <tf.Variable...shape=(4, 4) ...
|
|  Method resolution order:
|      Zeros
|      Initializer
|      builtins.object
|
|  Methods defined here:
|
|  __call__(self, shape, dtype=tf.float32, **kwargs)
|      Returns a tensor object initialized as specified by the initializer.
|
|      Args:
|        shape: Shape of the tensor.
|        dtype: Optional dtype of the tensor. Only numeric or boolean dtypes are
|         supported.
|        **kwargs: Additional keyword arguments.
|
|      Raises:
|        ValuesError: If the dtype is not numeric or boolean.
|
|  ----------------------------------------------------------------------
|  Methods inherited from Initializer:
|
|  get_config(self)
|      Returns the configuration of the initializer as a JSON-serializable dict.
|
|      Returns:
|        A JSON-serializable Python dict.
|
|  ----------------------------------------------------------------------
|  Class methods inherited from Initializer:
|
|  from_config(config) from builtins.type
|      Instantiates an initializer from a configuration dictionary.
|
|      Example:
|
|      ```python
|      initializer = RandomUniform(-1, 1)
|      config = initializer.get_config()
|      initializer = RandomUniform.from_config(config)
|      ```
|
|      Args:
|        config: A Python dictionary.
|          It will typically be the output of `get_config`.
|
|      Returns:
|        An Initializer instance.
|
|  ----------------------------------------------------------------------
|  Data descriptors inherited from Initializer:
|
|  __dict__
|      dictionary for instance variables (if defined)
|
|  __weakref__
|      list of weak references to the object (if defined)
